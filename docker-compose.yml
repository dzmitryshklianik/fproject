services:
  nginx-service:
    image: nginx
    container_name: nginx-container
    ports:
      - "8080:80"
    volumes:
      - ./app:/var/www/project
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php-service
      - mysql-service
    networks:
      nginx-php-mysql: {}

  php-service:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php-container
    ports:
      - "9000:9000"
    volumes:
      - ./app:/var/www/project
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      nginx-php-mysql: {}

  mysql-service:  # fixed name
    image: mysql:8.0
    container_name: mysql-container
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: >-
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
      MYSQL_DATABASE: test        # optional
      # MYSQL_USER: appuser          # optional
    networks:
      nginx-php-mysql: {}

  phpstan:
    image: phpstan/phpstan
    volumes:
      - .:/app
    command: analyse -l 1 /app

networks:
  nginx-php-mysql: {}  # must be a mapping (can be empty)

